h1{
color: red;
}

INLINE SYTLE(generally not implemented)
<h1 style="color: rgb(109, 98, 202);">Apna College</h1>
<p style="color:pink">This is a paragraph</p>
<button style="color:aqua; background-color: orange;">Help</button>

3.COLOR PROPERTY
4.BACKGROUND COLOR PROPERTY
5.COLOR SYSTEM color(r,g,b)
    black(0,0,0) or #000000 or #000
    red(255,0,0) or #ff0000 or #f00
    green(0,255,0) or #00ff00 or #0f0
    blue(0,0,255) or #0000ff or #00f
    white(255,255,255) #ffffff or #fff
6.TEXT PROPERTIES
    text-align (left/start, right/end, centre, justify) wrt width: 100%;
    font-weight
    text-decoration
    line-height
    letter spacing
    font-size
7.FONT SIZE
    ABSOLUTE ==> px pt pc cm mm in
    RELATIVE ==> % em rem ch vh vw + many more
8.FONT FAMILY

1.ELEMENT SELECTOR, CLASS SELECTOR, DESCENDENT SELECTOR, SIBLING SELECTOR
    *{
        font-family: "Courier New";
    }
    h1,h2{
        color: #b92b27;
    }
    #login{
        background-color: white;
    }
    #signup{
        background-color:#b92b27;
        color:white;
    }
    .myClass{
        background-color: red;       <!--   <button class="upvote">+upvote</button>  -->
    }                                <!--   <button id="login">Log in</button>       -->

    DECENDENT SIBLLING COMBINATOR
    p a{
        color : purple;
    }
    ADJACENT SIBLING COMBINATOR (heading 3 that comes immediately after paragraph) 
    p+h3{
        text-decoration: underline;
    }
    DIRECT PARENT CHILD RELATION
    p>a{
        
    }
    ATTRIBUTE SELECTOR
    input[type="radio"]:checked + label{
        color:red;
        font-weight:bold;
    }
    PSEUDO CLASS
    :hover
    :active
    :checked
    :nth-of-type

    CSS TRANSITIONS
    div{
    height:100px;
    width:100px;
    background-color:#4dff00ff;
    margin:0 auto;
    margin-top: 100px;
    margin-right: 10px;
    transition:margin-top 2s ease-in-out 0.2s;
}
div:hover{
    margin-right:400px;
    background-color:pink;
}
PSEUDO ELEMENTS
::first-letter
::first-line
::selection

CSS TRANSFORM
transform:rotate(45 deg);
transform: Scale(0.5);
transform: scaleX(0.5)/scaleY(0.5)

translation takes place only in 2d in css and not in 3d.
transform:translateX(2px)
transform:translateY(2px)
transform:translate(2px,2px)

transform: skew(30deg);

transform: rotate(90deg) translateX(100px);

box-shadow: 2px 2px 8px hotpink;

background-image: url("image-path");
background-size: contain(repeat)/cover(crop)/auto(stretch)

POSITION
static
relative
absolute
sticky
fixed

FLEXBOX
flexbox-direction:row;
flexbox-direction:row-reverse;
flexbox-direction:column;
flexbox-direction:column-reverse;

JUSTIFY
justify-content:flex-start;
justify-content:flex-end;
justify-content:center;
justify-cntent:space-between;

FLEX WRAP
flex-wrap:nowrap;
flex-wrap:wrap;
flex-wrap:wrap-reverse;

ALIGN ITEMS
align-content:flex-start;
align-content:flex-end;
align-content:space-between;
